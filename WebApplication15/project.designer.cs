#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication15
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class projectDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertsignup(signup instance);
    partial void Updatesignup(signup instance);
    partial void Deletesignup(signup instance);
    partial void Insertpostad(postad instance);
    partial void Updatepostad(postad instance);
    partial void Deletepostad(postad instance);
    #endregion
		
		public projectDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public projectDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projectDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public projectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<signup> signups
		{
			get
			{
				return this.GetTable<signup>();
			}
		}
		
		public System.Data.Linq.Table<postad> postads
		{
			get
			{
				return this.GetTable<postad>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.signup")]
	public partial class signup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _email;
		
		private string _pnumber;
		
		private string _password;
		
		private string _cpassword;
		
		private EntitySet<postad> _postads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpnumberChanging(string value);
    partial void OnpnumberChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OncpasswordChanging(string value);
    partial void OncpasswordChanged();
    #endregion
		
		public signup()
		{
			this._postads = new EntitySet<postad>(new Action<postad>(this.attach_postads), new Action<postad>(this.detach_postads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pnumber", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pnumber
		{
			get
			{
				return this._pnumber;
			}
			set
			{
				if ((this._pnumber != value))
				{
					this.OnpnumberChanging(value);
					this.SendPropertyChanging();
					this._pnumber = value;
					this.SendPropertyChanged("pnumber");
					this.OnpnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpassword", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string cpassword
		{
			get
			{
				return this._cpassword;
			}
			set
			{
				if ((this._cpassword != value))
				{
					this.OncpasswordChanging(value);
					this.SendPropertyChanging();
					this._cpassword = value;
					this.SendPropertyChanged("cpassword");
					this.OncpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="signup_postad", Storage="_postads", ThisKey="Id", OtherKey="seller")]
		public EntitySet<postad> postads
		{
			get
			{
				return this._postads;
			}
			set
			{
				this._postads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_postads(postad entity)
		{
			this.SendPropertyChanging();
			entity.signup = this;
		}
		
		private void detach_postads(postad entity)
		{
			this.SendPropertyChanging();
			entity.signup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.postad")]
	public partial class postad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _carname;
		
		private string _carmodel;
		
		private string _registration;
		
		private string _color;
		
		private string _city;
		
		private string _mileage;
		
		private int _price;
		
		private string _photo;
		
		private int _seller;
		
		private EntityRef<signup> _signup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OncarnameChanging(string value);
    partial void OncarnameChanged();
    partial void OncarmodelChanging(string value);
    partial void OncarmodelChanged();
    partial void OnregistrationChanging(string value);
    partial void OnregistrationChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnmileageChanging(string value);
    partial void OnmileageChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OnsellerChanging(int value);
    partial void OnsellerChanged();
    #endregion
		
		public postad()
		{
			this._signup = default(EntityRef<signup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carname", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string carname
		{
			get
			{
				return this._carname;
			}
			set
			{
				if ((this._carname != value))
				{
					this.OncarnameChanging(value);
					this.SendPropertyChanging();
					this._carname = value;
					this.SendPropertyChanged("carname");
					this.OncarnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carmodel", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string carmodel
		{
			get
			{
				return this._carmodel;
			}
			set
			{
				if ((this._carmodel != value))
				{
					this.OncarmodelChanging(value);
					this.SendPropertyChanging();
					this._carmodel = value;
					this.SendPropertyChanged("carmodel");
					this.OncarmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registration", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string registration
		{
			get
			{
				return this._registration;
			}
			set
			{
				if ((this._registration != value))
				{
					this.OnregistrationChanging(value);
					this.SendPropertyChanging();
					this._registration = value;
					this.SendPropertyChanged("registration");
					this.OnregistrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mileage", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string mileage
		{
			get
			{
				return this._mileage;
			}
			set
			{
				if ((this._mileage != value))
				{
					this.OnmileageChanging(value);
					this.SendPropertyChanging();
					this._mileage = value;
					this.SendPropertyChanged("mileage");
					this.OnmileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller", DbType="Int NOT NULL")]
		public int seller
		{
			get
			{
				return this._seller;
			}
			set
			{
				if ((this._seller != value))
				{
					if (this._signup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsellerChanging(value);
					this.SendPropertyChanging();
					this._seller = value;
					this.SendPropertyChanged("seller");
					this.OnsellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="signup_postad", Storage="_signup", ThisKey="seller", OtherKey="Id", IsForeignKey=true)]
		public signup signup
		{
			get
			{
				return this._signup.Entity;
			}
			set
			{
				signup previousValue = this._signup.Entity;
				if (((previousValue != value) 
							|| (this._signup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._signup.Entity = null;
						previousValue.postads.Remove(this);
					}
					this._signup.Entity = value;
					if ((value != null))
					{
						value.postads.Add(this);
						this._seller = value.Id;
					}
					else
					{
						this._seller = default(int);
					}
					this.SendPropertyChanged("signup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
